import re
import os
import sys
import shutil
import textwrap


# the pattern below looks for any line containing '>>> abjad.f', then captures
# all the next lines until either an empty line appears (i.e. a line with just
# a \n on it) or until the next line contains more Python documentation, which
# will start with a bunch of spaces followed by '>>>'.
pattern = r""">>> abjad\.f.*
([\s\S]*?)
(?:\n| *>>>)"""

# header for lilypond file
ly_header = r"""
\include "lilypond-book-preamble.ly"
\language "english"

\paper {
    line-width = 17\cm
}

\layout{
    indent = 0
    \numericTimeSignature
    \override Flag.stencil = #flat-flag
    \context {
        \Score
        \override SpacingSpanner.base-shortest-duration =
            #(ly:make-moment 1/12)
        \omit BarNumber
    }
}

"""

querry = input('Regenerate all images? (y/n) ')
if querry.lower() in ('y', 'yes'):

    # importing auxjad from the directory one level up
    auxjad_directory = os.path.dirname(os.getcwd())
    sys.path.insert(0, auxjad_directory)
    import auxjad

    # removing _api_members directory in case name of members have changed
    # the member's rst files will then be automatically regenerated by sphinx
    if os.path.exists('./_api_members'):
        shutil.rmtree('./_api_members')
    # creating export directory
    if not os.path.exists('./_images'):
        os.makedirs('./_images')
    else:
        shutil.rmtree('./_images')
        os.makedirs('./_images')
    os.chdir('./_images')
    if not os.path.exists('./lilypond-files'):
        os.makedirs('./lilypond-files')

    # generating lilypond files from docstrings
    for member in dir(auxjad):
        docstring = getattr(auxjad, member).__doc__
        if docstring is not None:
            matches = re.findall(pattern, docstring)
            if matches is not None:
                for n, match in enumerate(matches):
                    directory = './lilypond-files/'
                    filename = ('image-' + str(member) + '-'
                                + str(n + 1) + '.ly')
                    with open(directory + filename, 'w+') as f:
                        f.write(ly_header)
                        # removing comments from time signatures
                        match = match.replace(r'%%% ', '')
                        match = match.replace(r'%%%', '')
                        match = textwrap.dedent(match)
                        if r'\new Staff' in match or r'\new Score' in match:
                            f.write(match)
                        elif match[0] == r'{' and match[-1] == r'}':
                            f.write(r'\new Staff' + '\n')
                            f.write(match)
                        else:  # wrap in {} otherwise
                            match = textwrap.indent(match, '    ')
                            f.write(r'\new Staff' + '\n')
                            f.write(r'{' + '\n')
                            f.write(match)
                            f.write('\n' + r'}')
                    # compiling each newly created lilypond file
                    os.system('lilypond '
                              '-ddelete-intermediate-files '
                              '$include --png '
                              '-dbackend=eps '
                              '-dresolution=150 '
                              '-danti-alias-factor=1 '
                              + directory + filename)

    # generating lilypond files from example-n.rst files
    for read_file in os.listdir('../examples'):
        if read_file.startswith('example-'):
            with open('../examples/' + read_file, 'r') as example_file:
                matches = re.findall(pattern, example_file.read())
                if matches:
                    for n, match in enumerate(matches):
                        directory = './lilypond-files/'
                        filename = ('image-' + read_file.replace('.rst', '')
                                    + '-' + str(n + 1) + '.ly')
                        with open(directory + filename, 'w+') as f:
                            f.write(ly_header)
                            # removing comments from time signatures
                            match = match.replace(r'%%% ', '')
                            match = match.replace(r'%%%', '')
                            match = textwrap.dedent(match)
                            if (r'\new Staff' in match
                                    or r'\new Score' in match):
                                f.write(match)
                            elif match[0] == r'{' and match[-1] == r'}':
                                f.write(r'\new Staff' + '\n')
                                f.write(match)
                            else:  # wrap in {} otherwise
                                match = textwrap.indent(match, '    ')
                                f.write(r'\new Staff' + '\n')
                                f.write(r'{' + '\n')
                                f.write(match)
                                f.write('\n' + r'}')
                        # compiling each newly created lilypond file
                        os.system('lilypond '
                                  '-ddelete-intermediate-files '
                                  '$include --png '
                                  '-dbackend=eps '
                                  '-dresolution=150 '
                                  '-danti-alias-factor=1 '
                                  + directory + filename)

    # deleting junk files
    files_in_directory = os.listdir('./')
    for filename in files_in_directory:
        if any(filename.endswith(extension)
               for extension in ('.eps', '.count', '.tex', '.texi')):
            os.remove(filename)
